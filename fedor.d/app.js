document.addEventListener('DOMContentLoaded', async () => {
    const tg = window.Telegram?.WebApp;
    tg?.expand();

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ URL –∏–ª–∏ WebApp
    const params = new URLSearchParams(window.location.search);
    const userId = params.get('user_id') || tg?.initDataUnsafe?.user?.id || '0';
    const username = tg?.initDataUnsafe?.user?.first_name || '–ì–æ—Å—Ç—å';

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    document.getElementById('user-name').textContent = username;

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    const state = {
        balance: parseInt(params.get('stars')) || 0,
        inventory: JSON.parse(params.get('inventory') || '[]'),
        loading: false
    };

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    function updateUI() {
        document.getElementById('stars').textContent = state.balance;
        renderInventory();
    }

    // –†–µ–Ω–¥–µ—Ä –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    function renderInventory() {
        const container = document.getElementById('inventory-items');
        container.innerHTML = state.inventory.length > 0
            ? state.inventory.map(item => `
                <div class="item-card">
                    <div class="item-emoji">${item.emoji || 'üéÅ'}</div>
                    <div class="item-name">${item.name}</div>
                    <div class="item-price">${item.sell_price} ‚≠ê</div>
                    <div class="item-buttons">
                        <button class="sell-btn" data-id="${item.id}">üí∞</button>
                        <button class="withdraw-btn" data-id="${item.id}">üì§</button>
                    </div>
                </div>
            `).join('')
            : '<div class="empty-message">–ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç</div>';
    }

    // –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
    async function openCase(caseType) {
        if (state.loading) return;

        try {
            state.loading = true;

            if (state.balance < 10) {  // –ü—Ä–∏–º–µ—Ä —Ü–µ–Ω—ã –∫–µ–π—Å–∞
                alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–≤–µ–∑–¥!');
                return;
            }

            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É —á–µ—Ä–µ–∑ WebApp
            if (tg) {
                tg.sendData(JSON.stringify({
                    action: 'open_case',
                    case_type: caseType,
                    user_id: userId
                }));
            } else {
                alert('–î–µ–π—Å—Ç–≤–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –≤ Telegram');
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
        } finally {
            state.loading = false;
        }
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    document.getElementById('add-stars').addEventListener('click', () => {
        if (tg) {
            tg.openTelegramLink(`https://t.me/StarAzart_bot?start=pay_${userId}_100`);
        } else {
            window.location.href = `payment.html?user_id=${userId}`;
        }
    });

    document.querySelectorAll('.case-card').forEach(card => {
        card.addEventListener('click', () => openCase(card.dataset.case));
    });

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    updateUI();
});