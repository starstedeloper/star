class Roulette {
    constructor() {
        this.container = null;
        this.itemsContainer = null;
        this.resultContainer = null;
        this.isSpinning = false;
        // –≠–ª–µ–º–µ–Ω—Ç—ã —Å–æ–∑–¥–∞—é—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        this._createDOM();
    }

    _createDOM() {
        // –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Ä—É–ª–µ—Ç–∫–∏
        this.container = document.createElement('div');
        this.container.className = 'roulette-container';

        // –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–µ–ª–∫—É-—É–∫–∞–∑–∞—Ç–µ–ª—å
        const arrow = document.createElement('div');
        arrow.className = 'roulette-arrow';

        // –°–æ–∑–¥–∞–µ–º –æ–±–µ—Ä—Ç–∫—É –¥–ª—è –ª–µ–Ω—Ç—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
        this.itemsContainer = document.createElement('div');
        this.itemsContainer.className = 'roulette-items';

        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        this.resultContainer = document.createElement('div');
        this.resultContainer.className = 'roulette-result';

        // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–º–µ—Å—Ç–µ –∏ –¥–æ–±–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç–æ)
        this.container.appendChild(arrow);
        this.container.appendChild(this.itemsContainer);
        this.container.appendChild(this.resultContainer);
        document.body.appendChild(this.container);
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é —Ä—É–ª–µ—Ç–∫–∏
     * @param {Array} itemsPool - –ú–∞—Å—Å–∏–≤ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –ø–æ–∫–∞–∑–∞ –≤ –ª–µ–Ω—Ç–µ.
     * @param {Object} wonItem - –ü—Ä–µ–¥–º–µ—Ç, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è.
     * @returns {Promise} - –ó–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –∞–Ω–∏–º–∞—Ü–∏—è –æ–∫–æ–Ω—á–µ–Ω–∞.
     */
    spin(itemsPool, wonItem) {
        return new Promise((resolve) => {
            if (this.isSpinning) return resolve();
            this.isSpinning = true;

            // 1. –ì–æ—Ç–æ–≤–∏–º –ª–µ–Ω—Ç—É –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
            // –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø—É–ª –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –º–Ω–æ–≥–æ —Ä–∞–∑, —á—Ç–æ–±—ã –ª–µ–Ω—Ç–∞ –±—ã–ª–∞ –¥–ª–∏–Ω–Ω–æ–π
            const repeatedPool = Array(10).fill(itemsPool).flat();
            // –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –≤—ã–∏–≥—Ä—ã—à–Ω–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –±–ª–∏–∂–µ –∫ –∫–æ–Ω—Ü—É –ª–µ–Ω—Ç—ã
            const finalIndex = repeatedPool.length - itemsPool.length + itemsPool.findIndex(item => item.name === wonItem.name);

            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –¥–ª—è –ª–µ–Ω—Ç—ã
            this.itemsContainer.innerHTML = repeatedPool.map(item => `
                <div class="roulette-item">
                    <div class="roulette-item-emoji">${item.emoji || 'üéÅ'}</div>
                    <div class="roulette-item-name">${item.name}</div>
                </div>
            `).join('');
            
            // 2. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä—É–ª–µ—Ç–∫—É –∏ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            this.container.style.display = 'flex';
            this.resultContainer.style.display = 'none';
            this.itemsContainer.style.transition = 'none';
            this.itemsContainer.style.transform = 'translateX(0px)';

            // 3. –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
            // requestAnimationFrame –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Ä–∞—Å—á–µ—Ç—ã –ø—Ä–æ–∏–∑–æ–π–¥—É—Ç –ø–æ—Å–ª–µ –æ—Ç—Ä–∏—Å–æ–≤–∫–∏
            requestAnimationFrame(() => {
                const itemElementWidth = this.itemsContainer.querySelector('.roulette-item').offsetWidth + 10; // –®–∏—Ä–∏–Ω–∞ + gap
                const containerWidth = this.container.offsetWidth;

                // –¶–µ–ª—å - –æ—Ç—Ü–µ–Ω—Ç—Ä–æ–≤–∞—Ç—å –≤—ã–∏–≥—Ä—ã—à–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –ø–æ–¥ —Å—Ç—Ä–µ–ª–∫–æ–π
                const targetPosition = - (finalIndex * itemElementWidth) + (containerWidth / 2) - (itemElementWidth / 2);
                
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ –±—ã–ª–∞ –≤—Å–µ–≥–¥–∞ –≤ –æ–¥–Ω–æ–º –∏ —Ç–æ–º –∂–µ –ø–∏–∫—Å–µ–ª–µ
                const randomOffset = (Math.random() - 0.5) * itemElementWidth * 0.8;
                const finalPosition = targetPosition + randomOffset;
                const spinDuration = 5000; // 5 —Å–µ–∫—É–Ω–¥

                // 4. –ó–∞–ø—É—Å–∫–∞–µ–º CSS-–∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∏
                setTimeout(() => {
                    this.itemsContainer.style.transition = `transform ${spinDuration / 1000}s cubic-bezier(0.2, 0.8, 0.2, 1)`;
                    this.itemsContainer.style.transform = `translateX(${finalPosition}px)`;
                }, 100);


                // 5. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
                setTimeout(() => {
                    this._showResult(wonItem);
                    this.isSpinning = false;
                    resolve(); // –ó–∞–≤–µ—Ä—à–∞–µ–º Promise
                }, spinDuration + 200);
            });
        });
    }

    _showResult(item) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π –ø–æ–ø–∞–ø —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
        this.resultContainer.innerHTML = `
            <h3>–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!</h3>
            <div class="result-emoji">${item.emoji || 'üéÅ'}</div>
            <p class="result-name">${item.name}</p>
            <p class="result-price">${item.sell_price} ‚≠ê</p>
            <button class="close-roulette">–ó–∞–±—Ä–∞—Ç—å</button>
        `;
        this.resultContainer.style.display = 'flex';

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ó–∞–±—Ä–∞—Ç—å", –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –æ–¥–∏–Ω —Ä–∞–∑
        this.resultContainer.querySelector('.close-roulette').addEventListener('click', () => {
            this.container.style.display = 'none';
        }, { once: true });
    }
}
